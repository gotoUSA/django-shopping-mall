# Generated by Django 5.2.4 on 2025-07-30 11:29

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="010-1234-5678 형식으로 입력",
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="전화번호는 '010-1234-5678' 형식으로 입력해주세요.",
                                regex="^\\d{2,3}-\\d{3,4}-\\d{4}$",
                            )
                        ],
                        verbose_name="전화번호",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(blank=True, null=True, verbose_name="생년월일"),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="우편번호"
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="기본주소"
                    ),
                ),
                (
                    "address_detail",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="상세주소"
                    ),
                ),
                (
                    "is_email_verified",
                    models.BooleanField(default=False, verbose_name="이메일 인증 여부"),
                ),
                (
                    "is_phone_verified",
                    models.BooleanField(default=False, verbose_name="휴대폰 인증 여부"),
                ),
                (
                    "agree_marketing_email",
                    models.BooleanField(
                        default=False, verbose_name="마케팅 이메일 수신 동의"
                    ),
                ),
                (
                    "agree_marketing_sms",
                    models.BooleanField(
                        default=False, verbose_name="마케팅 sms 수신 동의"
                    ),
                ),
                (
                    "membership_level",
                    models.CharField(
                        choices=[
                            ("bronze", "브론즈"),
                            ("silver", "실버"),
                            ("gold", "골드"),
                            ("vip", "VIP"),
                        ],
                        default="bronze",
                        max_length=10,
                        verbose_name="회원등급",
                    ),
                ),
                (
                    "points",
                    models.PositiveIntegerField(default=0, verbose_name="포인트"),
                ),
                (
                    "last_login_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="마지막 로그인 IP"
                    ),
                ),
                (
                    "is_withdrawn",
                    models.BooleanField(default=False, verbose_name="탈퇴 여부"),
                ),
                (
                    "withdrawn_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="탈퇴 일시"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "사용자",
                "verbose_name_plural": "사용자 목록",
                "db_table": "shopping_users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="카테고리명"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL에 사용될 짦은 이름 (자동생성됨)",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="카테고리 설명"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True, verbose_name="활성화")),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="shopping.category",
                        verbose_name="상위 카테고리",
                    ),
                ),
            ],
            options={
                "verbose_name": "카테고리",
                "verbose_name_plural": "카테고리",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "결제대기"),
                            ("paid", "결제완료"),
                            ("preparing", "배송준비중"),
                            ("shipped", "배송중"),
                            ("delivered", "배송완료"),
                            ("cancelled", "주문취소"),
                            ("refunded", "환불완료"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="주문상태",
                    ),
                ),
                (
                    "shipping_name",
                    models.CharField(
                        help_text="배송받으실 분의 이름",
                        max_length=100,
                        verbose_name="받는분 성함",
                    ),
                ),
                (
                    "shipping_phone",
                    models.CharField(
                        help_text="배송 시 연락 가능한 번호",
                        max_length=20,
                        verbose_name="받는분 연락처",
                    ),
                ),
                (
                    "shipping_postal_code",
                    models.CharField(max_length=10, verbose_name="우편번호"),
                ),
                (
                    "shipping_address_detail",
                    models.CharField(
                        help_text="동/호수 등 상세 주소",
                        max_length=255,
                        verbose_name="상세주소",
                    ),
                ),
                (
                    "order_memo",
                    models.TextField(
                        blank=True,
                        help_text="배송 시 요청사항",
                        verbose_name="주문메모",
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("card", "신용/체크카드"),
                            ("bank_transfer", "무통장입금"),
                            ("kakao_pay", "카카오페이"),
                            ("naver_pay", "네이버페이"),
                            ("toss", "토스"),
                        ],
                        max_length=20,
                        verbose_name="결제방법",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=0,
                        default=Decimal("0"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                        verbose_name="총 주문금액",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="주문일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="주문자",
                    ),
                ),
            ],
            options={
                "verbose_name": "주문",
                "verbose_name_plural": "주문 목록",
                "db_table": "shopping_orders",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=200, verbose_name="상품명"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL용 이름 (자동생성)", max_length=200, unique=True
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="상품의 자세한 설명을 입력하세요.",
                        verbose_name="상품 설명",
                    ),
                ),
                (
                    "short_description",
                    models.CharField(
                        blank=True,
                        help_text="목록에서 보여질 짧은 설명",
                        max_length=300,
                        verbose_name="간단 설명",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="판매가",
                    ),
                ),
                (
                    "compare_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=0,
                        help_text="할인 전 가격 (선택사항)",
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="할인 전 가격",
                    ),
                ),
                (
                    "stock",
                    models.PositiveIntegerField(default=0, verbose_name="재고 수량"),
                ),
                (
                    "is_available",
                    models.BooleanField(default=True, verbose_name="판매 가능 여부"),
                ),
                (
                    "sku",
                    models.CharField(
                        help_text="상품 고유 관리 번호",
                        max_length=50,
                        unique=True,
                        verbose_name="재고관리코드(SKU)",
                    ),
                ),
                (
                    "brand",
                    models.CharField(blank=True, max_length=100, verbose_name="브랜드"),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        help_text="쉼표로 구분하여 입력 (예: 신상품, 베스트 , 세일)",
                        max_length=200,
                        verbose_name="태그",
                    ),
                ),
                (
                    "view_count",
                    models.PositiveIntegerField(default=0, verbose_name="조회수"),
                ),
                (
                    "sold_count",
                    models.PositiveIntegerField(default=0, verbose_name="판매량"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="체크 해제시 상품이 숨겨집니다.",
                        verbose_name="판매중",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="products",
                        to="shopping.category",
                        verbose_name="카테고리",
                    ),
                ),
                (
                    "seller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="판매자",
                    ),
                ),
            ],
            options={
                "verbose_name": "상품",
                "verbose_name_plural": "상품",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "product_name",
                    models.CharField(max_length=255, verbose_name="상품명(주문당시)"),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="수량",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=0,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                        verbose_name="단가(주문당시)",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="shopping.order",
                        verbose_name="주문",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="shopping.product",
                        verbose_name="상품",
                    ),
                ),
            ],
            options={
                "verbose_name": "주문 상품",
                "verbose_name_plural": "주문 상품 목록",
                "db_table": "shopping_order_items",
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="product/%Y/%m/%d", verbose_name="이미지"
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        blank=True,
                        help_text="이미지 설명 (SEO용)",
                        max_length=200,
                        verbose_name="대체 텍스트",
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(default=False, verbose_name="대표 이미지"),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, verbose_name="표시 순서"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="shopping.product",
                        verbose_name="상품",
                    ),
                ),
            ],
            options={
                "verbose_name": "상품 이미지",
                "verbose_name_plural": "상품 이미지",
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="평점",
                    ),
                ),
                ("comment", models.TextField(verbose_name="리뷰 내용")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="shopping.product",
                        verbose_name="상품",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="작성자",
                    ),
                ),
            ],
            options={
                "verbose_name": "상품 리뷰",
                "verbose_name_plural": "상품 리뷰",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["name", "category"], name="shopping_pr_name_89bec0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["price"], name="shopping_pr_price_86731a_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="productreview",
            unique_together={("product", "user")},
        ),
    ]
